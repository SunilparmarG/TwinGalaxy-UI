{"ast":null,"code":"var _jsxFileName = \"/home/admin1/Desktop/Office Data/Projects/TwinGalaxy-UI-data/TwinGalaxy/src/Components/text/Text.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Text.scss';\n/**\n * Name: Text\n * Desc: Render Text\n * @param {string} text\n * @param {string} className\n * @param {string} color\n * @param {string} fontWeight\n * @param {string} fontSize\n * @param {object} style\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Text = props => {\n  const {\n    size,\n    color,\n    fontWeight,\n    className,\n    ...rest\n  } = props;\n  const name = `${size || ''} ${color || ''} ${fontWeight || ''} ${className || ''} ${'text'} `;\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: name,\n      ...rest,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Text;\nText.propTypes = {\n  size: PropTypes.string.isRequired,\n  fontWeight: PropTypes.string.isRequired,\n  fontSize: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired\n};\nexport default Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","PropTypes","Text","props","size","color","fontWeight","className","rest","name","text","propTypes","string","isRequired","fontSize"],"sources":["/home/admin1/Desktop/Office Data/Projects/TwinGalaxy-UI-data/TwinGalaxy/src/Components/text/Text.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Text.scss';\n/**\n * Name: Text\n * Desc: Render Text\n * @param {string} text\n * @param {string} className\n * @param {string} color\n * @param {string} fontWeight\n * @param {string} fontSize\n * @param {object} style\n */\n\nconst Text = (props) => {\n  const {size, color, fontWeight, className, ...rest } = props;\n  const name = `${size || ''} ${color || ''} ${fontWeight || ''} ${className || '' } ${'text'} `;\n  return (\n    <React.Fragment>\n      <span className={name} {...rest}>\n        {props.text}\n      </span>\n    </React.Fragment>\n  );\n};\n\nText.propTypes = {\n  size: PropTypes.string.isRequired,\n  fontWeight: PropTypes.string.isRequired,\n  fontSize: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired,\n  className: PropTypes.string,\n  text: PropTypes.string.isRequired,\n};\nexport default Text;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,aAAP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;EACtB,MAAM;IAACC,IAAD;IAAOC,KAAP;IAAcC,UAAd;IAA0BC,SAA1B;IAAqC,GAAGC;EAAxC,IAAiDL,KAAvD;EACA,MAAMM,IAAI,GAAI,GAAEL,IAAI,IAAI,EAAG,IAAGC,KAAK,IAAI,EAAG,IAAGC,UAAU,IAAI,EAAG,IAAGC,SAAS,IAAI,EAAI,IAAG,MAAO,GAA5F;EACA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,uBACE;MAAM,SAAS,EAAEE,IAAjB;MAAA,GAA2BD,IAA3B;MAAA,UACGL,KAAK,CAACO;IADT;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAVD;;KAAMR,I;AAYNA,IAAI,CAACS,SAAL,GAAiB;EACfP,IAAI,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADR;EAEfP,UAAU,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAFd;EAGfC,QAAQ,EAAEb,SAAS,CAACW,MAAV,CAAiBC,UAHZ;EAIfR,KAAK,EAAEJ,SAAS,CAACW,MAAV,CAAiBC,UAJT;EAKfN,SAAS,EAAEN,SAAS,CAACW,MALN;EAMfF,IAAI,EAAET,SAAS,CAACW,MAAV,CAAiBC;AANR,CAAjB;AAQA,eAAeX,IAAf"},"metadata":{},"sourceType":"module"}